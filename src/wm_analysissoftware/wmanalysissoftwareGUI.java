/*s
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wm_analysissoftware;

import wm_components.*;
import java.awt.Component;
import java.awt.Container;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Meenakshi
 */
public class wmanalysissoftwareGUI extends javax.swing.JFrame {

    private Component frame;
    Platform platform = new Platform();
    private int trial;
    private int genBgd;
    private int drugType;
    private File dir;
    File[] dataFiles = null;
    ArrayList<Mouse> Mice = new ArrayList();

    /**
     * Creates new form wmanalysissoftwareGUI
     */
    public wmanalysissoftwareGUI() {
        initComponents();
        //disable tabs 2-measures and 3-output
        int n = jTabbedPane.indexOfTab("Measures");
        jTabbedPane.setEnabledAt(n, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTrial = new javax.swing.ButtonGroup();
        buttonGroupGenBgd = new javax.swing.ButtonGroup();
        buttonGroupDrugType = new javax.swing.ButtonGroup();
        buttonGroupOutputFileFormat = new javax.swing.ButtonGroup();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanelPnM = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonSelectFiles = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jRadioButtonTrialNone = new javax.swing.JRadioButton();
        jRadioButtonTrialPD3 = new javax.swing.JRadioButton();
        jRadioButtonTrialPD5 = new javax.swing.JRadioButton();
        jRadioButtonTrialPD7 = new javax.swing.JRadioButton();
        jRadioButtonGenBgdWT = new javax.swing.JRadioButton();
        jRadioButtonGenBgdTG = new javax.swing.JRadioButton();
        jRadioButtonDrugTypeVeh = new javax.swing.JRadioButton();
        jRadioButtonDrugTypeTest = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldXCoordPt = new javax.swing.JTextField();
        jTextFieldYCoordPt = new javax.swing.JTextField();
        jTextFieldSizePt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldXDim = new javax.swing.JTextField();
        jTextFieldYDim = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanelMeasures = new javax.swing.JPanel();
        jButtonExtract = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jCheckBoxRDist = new javax.swing.JCheckBox();
        jCheckBoxRVel = new javax.swing.JCheckBox();
        jCheckBoxRVelalongPt = new javax.swing.JCheckBox();
        jCheckBoxRVelperpendPt = new javax.swing.JCheckBox();
        jCheckBoxRVelErr = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jCheckBoxN = new javax.swing.JCheckBox();
        jCheckBoxMean = new javax.swing.JCheckBox();
        jCheckBoxSEM = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        jRadioButtonASCII = new javax.swing.JRadioButton();
        jRadioButtonGraphsPlots = new javax.swing.JRadioButton();
        jRadioButtonImages = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Water Maze analysis software");

        jLabel1.setText("Select files");

        jButtonSelectFiles.setText("Browse");
        jButtonSelectFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectFilesActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Mouse info:");

        jLabel3.setText("Trial");

        jLabel4.setText("Genetic Background");

        jLabel5.setText("Drug type");

        buttonGroupTrial.add(jRadioButtonTrialNone);
        jRadioButtonTrialNone.setText("None");

        buttonGroupTrial.add(jRadioButtonTrialPD3);
        jRadioButtonTrialPD3.setText("Probe day 3");

        buttonGroupTrial.add(jRadioButtonTrialPD5);
        jRadioButtonTrialPD5.setText("Probe day 5");

        buttonGroupTrial.add(jRadioButtonTrialPD7);
        jRadioButtonTrialPD7.setText("Probe day 7");

        buttonGroupGenBgd.add(jRadioButtonGenBgdWT);
        jRadioButtonGenBgdWT.setText("Wild type");

        buttonGroupGenBgd.add(jRadioButtonGenBgdTG);
        jRadioButtonGenBgdTG.setText("Transgenic");

        buttonGroupDrugType.add(jRadioButtonDrugTypeVeh);
        jRadioButtonDrugTypeVeh.setText("Vehicle");

        buttonGroupDrugType.add(jRadioButtonDrugTypeTest);
        jRadioButtonDrugTypeTest.setText("Test");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Platform details:");

        jTextFieldXCoordPt.setText("175");

        jTextFieldYCoordPt.setText("175");

        jLabel9.setText("X Coord:");

        jLabel10.setText("Y Coord:");

        jLabel11.setText("Size (in px):");

        jLabel6.setText("Dimensions:");

        jTextFieldXDim.setText("240");

        jTextFieldYDim.setText("240");

        jLabel7.setText("by");

        javax.swing.GroupLayout jPanelPnMLayout = new javax.swing.GroupLayout(jPanelPnM);
        jPanelPnM.setLayout(jPanelPnMLayout);
        jPanelPnMLayout.setHorizontalGroup(
            jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPnMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonTrialPD5)
                    .addComponent(jRadioButtonTrialPD7)
                    .addGroup(jPanelPnMLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSelectFiles))
                    .addGroup(jPanelPnMLayout.createSequentialGroup()
                        .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanelPnMLayout.createSequentialGroup()
                                .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelPnMLayout.createSequentialGroup()
                                        .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanelPnMLayout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldYCoordPt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanelPnMLayout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldXCoordPt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(48, 48, 48)
                                        .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jRadioButtonGenBgdWT)
                                            .addComponent(jRadioButtonGenBgdTG)
                                            .addGroup(jPanelPnMLayout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextFieldXDim, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanelPnMLayout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextFieldSizePt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jRadioButtonTrialPD3)
                                    .addComponent(jRadioButtonTrialNone)
                                    .addComponent(jLabel3))
                                .addGap(7, 7, 7)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldYDim, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonDrugTypeVeh)
                            .addComponent(jRadioButtonDrugTypeTest)
                            .addComponent(jLabel5))))
                .addGap(0, 0, 0))
            .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelPnMLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel8)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanelPnMLayout.setVerticalGroup(
            jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPnMLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSizePt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldXCoordPt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(8, 8, 8)
                .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPnMLayout.createSequentialGroup()
                        .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldYCoordPt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldXDim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(17, 17, 17)
                        .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelPnMLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonTrialNone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonTrialPD3))
                            .addGroup(jPanelPnMLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonGenBgdWT)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonGenBgdTG))))
                    .addGroup(jPanelPnMLayout.createSequentialGroup()
                        .addComponent(jTextFieldYDim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonDrugTypeVeh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonDrugTypeTest)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonTrialPD5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonTrialPD7)
                .addGap(27, 27, 27)
                .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonSelectFiles))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(jPanelPnMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelPnMLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel8)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane.addTab("Platform and Mice details", jPanelPnM);

        jButtonExtract.setText("Extract");
        jButtonExtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExtractActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Measures:");

        jCheckBoxRDist.setText("Distance");

        jCheckBoxRVel.setText("Velocity");

        jCheckBoxRVelalongPt.setText("Velocity along platform");

        jCheckBoxRVelperpendPt.setText("Velocity perpendicular to platform");

        jCheckBoxRVelErr.setText("Velocity errors");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Statistics:");

        jCheckBoxN.setText("Total number of mice");

        jCheckBoxMean.setText("Mean");

        jCheckBoxSEM.setText("SEM");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Output file format:");

        buttonGroupOutputFileFormat.add(jRadioButtonASCII);
        jRadioButtonASCII.setText("ASCII files");

        buttonGroupOutputFileFormat.add(jRadioButtonGraphsPlots);
        jRadioButtonGraphsPlots.setText("Graphs or Plots?");

        buttonGroupOutputFileFormat.add(jRadioButtonImages);
        jRadioButtonImages.setText("Images?");

        javax.swing.GroupLayout jPanelMeasuresLayout = new javax.swing.GroupLayout(jPanelMeasures);
        jPanelMeasures.setLayout(jPanelMeasuresLayout);
        jPanelMeasuresLayout.setHorizontalGroup(
            jPanelMeasuresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMeasuresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMeasuresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonGraphsPlots)
                    .addComponent(jRadioButtonASCII)
                    .addComponent(jCheckBoxRVelErr)
                    .addComponent(jButtonExtract)
                    .addGroup(jPanelMeasuresLayout.createSequentialGroup()
                        .addGroup(jPanelMeasuresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jCheckBoxRDist)
                            .addComponent(jCheckBoxRVel)
                            .addComponent(jCheckBoxRVelperpendPt)
                            .addComponent(jCheckBoxRVelalongPt))
                        .addGap(26, 26, 26)
                        .addGroup(jPanelMeasuresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jCheckBoxN)
                            .addComponent(jCheckBoxMean)
                            .addComponent(jCheckBoxSEM)))
                    .addComponent(jLabel14)
                    .addComponent(jRadioButtonImages)))
        );
        jPanelMeasuresLayout.setVerticalGroup(
            jPanelMeasuresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMeasuresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMeasuresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMeasuresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxRDist)
                    .addComponent(jCheckBoxN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMeasuresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxRVel)
                    .addComponent(jCheckBoxMean))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMeasuresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxRVelalongPt)
                    .addComponent(jCheckBoxSEM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxRVelperpendPt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxRVelErr)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonASCII)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonGraphsPlots)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonImages)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jButtonExtract)
                .addContainerGap())
        );

        jTabbedPane.addTab("Measures", jPanelMeasures);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelectFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectFilesActionPerformed
        // TODO add your handling code here:

        //Set platform details/info:
        try {
            if (0 <= Integer.parseInt(jTextFieldXCoordPt.getText())
                    && 0 <= Integer.parseInt(jTextFieldYCoordPt.getText())
                    && Integer.parseInt(jTextFieldXCoordPt.getText()) <= 240
                    && Integer.parseInt(jTextFieldYCoordPt.getText()) <= 240
                    && 0 <= Integer.parseInt(jTextFieldXDim.getText())
                    && 0 <= Integer.parseInt(jTextFieldYDim.getText())
                    && Integer.parseInt(jTextFieldXDim.getText()) <= 240
                    && Integer.parseInt(jTextFieldYDim.getText()) <= 240) {
                platform.setX(Integer.parseInt(jTextFieldXCoordPt.getText()));
                platform.setY(Integer.parseInt(jTextFieldYCoordPt.getText()));
                platform.setXDim(Integer.parseInt(jTextFieldXDim.getText()));
                platform.setYDim(Integer.parseInt(jTextFieldYDim.getText()));
            } else {
                JOptionPane.showMessageDialog(frame, "Number out of range. Please enter a number between 0-240 for platform details.", "Invalid range", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(frame, "Number not entered. Please enter a number between 0-240 for platform details.", "Invalid number", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Set mouse details/info:
        //Set probe trial info
        String selectedTrial = "";
        if (this.jRadioButtonTrialPD3.isSelected()) {
            trial = Trial.PD3;
            selectedTrial = this.jRadioButtonTrialPD3.getText();
        } else if (this.jRadioButtonTrialPD5.isSelected()) {
            trial = Trial.PD5;
            selectedTrial = this.jRadioButtonTrialPD5.getText();
        } else if (this.jRadioButtonTrialPD7.isSelected()) {
            trial = Trial.PD7;
            selectedTrial = this.jRadioButtonTrialPD7.getText();
        } else {
            trial = Trial.UNDEFINED;
        }

        //Set Genetic Bgd of mice
        String selectedGenBgd = "";
        if (this.jRadioButtonGenBgdTG.isSelected()) {
            genBgd = GeneticBackground.TG;
            selectedGenBgd = this.jRadioButtonGenBgdTG.getText();
        } else {
            genBgd = GeneticBackground.WT;
        }

        //Set Drug type of mice
        String selectedDrugType = "";
        if (this.jRadioButtonDrugTypeTest.isSelected()) {
            drugType = DrugType.TEST;
            selectedDrugType = this.jRadioButtonDrugTypeTest.getText();
        } else {
            drugType = DrugType.VEHICLE;
        }

        // commented out : code to choose multiple files
        JFileChooser Fc = new JFileChooser();
        Fc.setMultiSelectionEnabled(true);
        int result = Fc.showOpenDialog(this);
        dir = Fc.getCurrentDirectory();
        //File[] dataFiles = null;
        FileReader fReader = null;                      //Reader class : Java class for reading text files (ASCII)

        if (result == JFileChooser.APPROVE_OPTION) {
            dataFiles = Fc.getSelectedFiles();
            int noFiles = dataFiles.length;                     //stores the number of files selected by the user
            /**
             * Initialization of variables
             */
            String dataString = "";
            int c = 0;
            float xData;
            float yData;

            for (File curFile : dataFiles) {
                int count = 0;
                if (curFile.exists()) {
                    ArrayList<Float> XPos = new ArrayList();
                    ArrayList<Float> YPos = new ArrayList();

                    try {
                        fReader = new FileReader(curFile);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(wmanalysissoftwareGUI.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(frame, "Issue with reading the files.", "FileNotFoundException", JOptionPane.ERROR_MESSAGE);

                    }
                    try {

                        while ((c = fReader.read()) != -1) {
                            switch (c) {
                                case '\t':
                                    xData = Float.parseFloat(dataString);
                                    XPos.add(xData);
                                    dataString = "";
                                    break;
                                case '\n':
                                    yData = Float.parseFloat(dataString);
                                    YPos.add(yData);
                                    dataString = "";
                                    break;
                                default:
                                    dataString += (char) c;
                            }
                        }
                        count = count + 1;
                        Mouse M = new Mouse(count, trial, genBgd, drugType, XPos, YPos);
                        Mice.add(M);
                    } catch (IOException ex) {
                        Logger.getLogger(wmanalysissoftwareGUI.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(frame, "Issue with readingfiles.", "IOException", JOptionPane.ERROR_MESSAGE);
                    }
                }

            }
            if (Mice.size() != 0) {
                for (int i = 0; i < Mice.size(); i++) {
                    Mice.get(i).setXPosition(platform);
                    Mice.get(i).setYPosition(platform);
                }
            }
            //Print out message
            JOptionPane.showMessageDialog(frame, "Files selected successfully. Please select measures to be calculated.", "Files selected", JOptionPane.INFORMATION_MESSAGE);

            //enable next two tabs
            int n = jTabbedPane.indexOfTab("Measures");
            jTabbedPane.setEnabledAt(n, true);
        } else if (result == JFileChooser.CANCEL_OPTION) {
            //Print out message
            JOptionPane.showMessageDialog(frame, "Cancelled. Please select files to proceed.", "File selection cancelled.", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSelectFilesActionPerformed

    private void jButtonExtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExtractActionPerformed
        // TODO add your handling code here:

        //Calculate measures as per selection
        if (this.jCheckBoxRDist.isSelected()) {
            for (int i = 0; i < Mice.size(); i++) {
                Mice.get(i).setDistance();
            }
        }
        if (this.jCheckBoxRVel.isSelected()) {
            for (int i = 0; i < Mice.size(); i++) {
                Mice.get(i).setVelocity();
            }
        }
        if (this.jCheckBoxRVelalongPt.isSelected()) {
            for (int i = 0; i < Mice.size(); i++) {
                Mice.get(i).setVelocityAlongPt();
            }
        }
        if (this.jCheckBoxRVelperpendPt.isSelected()) {
            for (int i = 0; i < Mice.size(); i++) {
                Mice.get(i).setVelocityPerpendicularPt();
            }
        }
        if (this.jCheckBoxRVelErr.isSelected()) {
            for (int i = 0; i < Mice.size(); i++) {
                Mice.get(i).setVelocityError();
            }
        }

        //Output ASCII files according to selection 
        int noFilesWritten = 0;

        if (this.jRadioButtonASCII.isSelected()) {
            if (this.jCheckBoxRDist.isSelected()) {
                File fOut = new File(dir + "\\" + "Output_Distance");
                if (fOut != null) {
                    try {
                        FileWriter fWriter = new FileWriter(fOut);
                        int i = 0;
                        int c = 0;
                        do {
                            do {
                                if (i == 0) {
                                    fWriter.write(String.valueOf(c + 1) + '\t' + String.valueOf(Mice.get(i).getDistance().get(c)) + '\t');
                                } else {
                                    fWriter.write(String.valueOf(Mice.get(i).getDistance().get(c)));
                                }
                                i++;
                            } while (i < Mice.size());
                            fWriter.write('\n');
                            c++;
                            i = 0;
                        } while (c < Mice.get(i).getDistance().size());
                        fWriter.close();
                        noFilesWritten = noFilesWritten + 1;
                    } catch (IOException ex) {
                        Logger.getLogger(wmanalysissoftwareGUI.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(frame, "Issue writing Output_Distance file.", "IOException", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            if (this.jCheckBoxRVel.isSelected()) {
                File fOut = new File(dir + "\\" + "Output_Velocity");
                if (fOut != null) {
                    try {
                        FileWriter fWriter = new FileWriter(fOut);
                        int i = 0;
                        int c = 0;
                        do {
                            do {
                                if (i == 0) {
                                    fWriter.write(String.valueOf(c + 1) + '\t' + String.valueOf(Mice.get(i).getVelocity().get(c)) + '\t');
                                } else {
                                    fWriter.write(String.valueOf(Mice.get(i).getVelocity().get(c)));
                                }
                                i++;
                            } while (i < Mice.size());
                            fWriter.write('\n');
                            c++;
                            i = 0;
                        } while (c < Mice.get(i).getVelocity().size());
                        fWriter.close();
                        noFilesWritten = noFilesWritten + 1;
                    } catch (IOException ex) {
                        Logger.getLogger(wmanalysissoftwareGUI.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(frame, "Issue writing Output_Velocity file.", "IOException", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            if (this.jCheckBoxRVelalongPt.isSelected()) {
                File fOut = new File(dir + "\\" + "Output_VelocityalongPt");
                if (fOut != null) {
                    try {
                        FileWriter fWriter = new FileWriter(fOut);
                        int i = 0;
                        int c = 0;
                        do {
                            do {
                                if (i == 0) {
                                    fWriter.write(String.valueOf(c + 1) + '\t' + String.valueOf(Mice.get(i).getVelocityAlongPt().get(c)) + '\t');
                                } else {
                                    fWriter.write(String.valueOf(Mice.get(i).getVelocityAlongPt().get(c)));
                                }
                                i++;
                            } while (i < Mice.size());
                            fWriter.write('\n');
                            c++;
                            i = 0;
                        } while (c < Mice.get(i).getVelocityAlongPt().size());
                        fWriter.close();
                        noFilesWritten = noFilesWritten + 1;
                    } catch (IOException ex) {
                        Logger.getLogger(wmanalysissoftwareGUI.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(frame, "Issue writing Output_VelocityalongPt file.", "IOException", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            if (this.jCheckBoxRVelperpendPt.isSelected()) {
                File fOut = new File(dir + "\\" + "Output_VelocityperpendicularPt");
                if (fOut != null) {
                    try {
                        FileWriter fWriter = new FileWriter(fOut);
                        int i = 0;
                        int c = 0;
                        do {
                            do {
                                if (i == 0) {
                                    fWriter.write(String.valueOf(c + 1) + '\t' + String.valueOf(Mice.get(i).getVelocityPerpendicularPt().get(c)) + '\t');
                                } else {
                                    fWriter.write(String.valueOf(Mice.get(i).getVelocityPerpendicularPt().get(c)));
                                }
                                i++;
                            } while (i < Mice.size());
                            fWriter.write(+'\n');
                            c++;
                            i = 0;
                        } while (c < Mice.get(i).getVelocityPerpendicularPt().size());
                        fWriter.close();
                        noFilesWritten = noFilesWritten + 1;
                    } catch (IOException ex) {
                        Logger.getLogger(wmanalysissoftwareGUI.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(frame, "Issue writing Output_VelocityPerpendicularPt file.", "IOException", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            if (this.jCheckBoxRVelErr.isSelected()) {
                File fOut = new File(dir + "\\" + "Output_VelocityError");
                if (fOut != null) {
                    try {
                        FileWriter fWriter = new FileWriter(fOut);
                        int i = 0;
                        int c = 0;
                        do {
                            do {
                                if (i == 0) {
                                    fWriter.write(String.valueOf(c + 1) + '\t' + String.valueOf(Mice.get(i).getVelocityError().get(c)) + '\t');
                                } else {
                                    fWriter.write(String.valueOf(Mice.get(i).getVelocityError().get(c)));
                                }
                                i++;
                            } while (i < Mice.size());
                            fWriter.write(+'\n');
                            c++;
                            i = 0;
                        } while (c < Mice.get(i).getVelocityError().size());
                        fWriter.close();
                        noFilesWritten = noFilesWritten + 1;
                    } catch (IOException ex) {
                        Logger.getLogger(wmanalysissoftwareGUI.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(frame, "Issue writing Output_VelocityError file.", "IOException", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }

        }
        if (noFilesWritten != 0) {
            JOptionPane.showMessageDialog(frame, "Successfully written ASCII files.", "Writing completed", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(frame, "No files written", "IO", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jButtonExtractActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(wmanalysissoftwareGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(wmanalysissoftwareGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(wmanalysissoftwareGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(wmanalysissoftwareGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new wmanalysissoftwareGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupDrugType;
    private javax.swing.ButtonGroup buttonGroupGenBgd;
    private javax.swing.ButtonGroup buttonGroupOutputFileFormat;
    private javax.swing.ButtonGroup buttonGroupTrial;
    private javax.swing.JButton jButtonExtract;
    private javax.swing.JButton jButtonSelectFiles;
    private javax.swing.JCheckBox jCheckBoxMean;
    private javax.swing.JCheckBox jCheckBoxN;
    private javax.swing.JCheckBox jCheckBoxRDist;
    private javax.swing.JCheckBox jCheckBoxRVel;
    private javax.swing.JCheckBox jCheckBoxRVelErr;
    private javax.swing.JCheckBox jCheckBoxRVelalongPt;
    private javax.swing.JCheckBox jCheckBoxRVelperpendPt;
    private javax.swing.JCheckBox jCheckBoxSEM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelMeasures;
    private javax.swing.JPanel jPanelPnM;
    private javax.swing.JRadioButton jRadioButtonASCII;
    private javax.swing.JRadioButton jRadioButtonDrugTypeTest;
    private javax.swing.JRadioButton jRadioButtonDrugTypeVeh;
    private javax.swing.JRadioButton jRadioButtonGenBgdTG;
    private javax.swing.JRadioButton jRadioButtonGenBgdWT;
    private javax.swing.JRadioButton jRadioButtonGraphsPlots;
    private javax.swing.JRadioButton jRadioButtonImages;
    private javax.swing.JRadioButton jRadioButtonTrialNone;
    private javax.swing.JRadioButton jRadioButtonTrialPD3;
    private javax.swing.JRadioButton jRadioButtonTrialPD5;
    private javax.swing.JRadioButton jRadioButtonTrialPD7;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTextField jTextFieldSizePt;
    private javax.swing.JTextField jTextFieldXCoordPt;
    private javax.swing.JTextField jTextFieldXDim;
    private javax.swing.JTextField jTextFieldYCoordPt;
    private javax.swing.JTextField jTextFieldYDim;
    // End of variables declaration//GEN-END:variables
}
